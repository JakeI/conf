#!/usr/bin/env bash

# Build the LaTeX project
build_case() {
    file_name="${@: -1}"
    # Check if the file name is empty or not a .tex file
    if [[ -z "$file_name" || "$file_name" != *.tex ]]; then
        tex_files=( *.tex )
        if [[ ${#tex_files[@]} -eq 1 ]]; then
            file_name="${tex_files[0]}"
        else
            echo "Error: No .tex file specified, and ${#tex_files[@]} .tex files found in the directory."
            echo "Please specify a .tex file or ensure there is only one in the directory."
            exit 1
        fi
    fi

    job_name="${file_name%.tex}"
    mkdir -p build
    latexmk \
        -pvc \
        -lualatex \
        -interaction=nonstopmode \
        -outdir=build/. \
        -auxdir=build/. \
        -cd- \
        -CF \
        -e '$pdf_previewer='"'$0 show'" \
        -e '$pdf_update_method=2' \
        -e '$lualatex="pplatex -q -c lualatex -- %O %S"' \
        "$file_name"
}

# Find a single .tex file and check for its matching PDF
find_single_tex_with_pdf() {
    tex_files=(*.tex)
    if [ "${#tex_files[@]}" -eq 1 ]; then
        echo "${tex_files[0]}"
    else
        matching_tex=""
        for tex_file in "${tex_files[@]}"; do
            base_name=$(basename "$tex_file" .tex)
            build_pdf_path="build/${base_name}.pdf"
            if [ -f "$build_pdf_path" ]; then
                if [ -n "$matching_tex" ]; then
                    echo "Error: Multiple .tex files have matching PDFs in the build directory." >&2
                    exit 1
                fi
                matching_tex="$tex_file"
            fi
        done
        if [ -z "$matching_tex" ]; then
            echo "Error: No .tex files have matching PDFs in the build directory." >&2
            exit 1
        fi
        echo "$matching_tex"
    fi
}

show_pdf_in_zathura() {
    tmpdir=$(mktemp -d)
    cp "$XDG_CONFIG_HOME/zathura/zathurarc" "$tmpdir/."
    echo 'set filemonitor "signal"' >> "$tmpdir/zathurarc"
    zathura --fork --config-dir="$tmpdir" "$1"
}

perform_clean() {
    if [ -d build/. ]; then
        case "$1" in
        all)
            latexmk -C -outdir=build/. -auxdir=build/.
            ;;
        *)
            latexmk -c -outdir=build/. -auxdir=build/.
        esac
    fi
}

display_help() {
    echo "runs latex in the build/. directory"
    echo "$0 [build|show|clean|help] [additional arguments]"
    echo "  build/b   : Run latexmk in continuous mode"
    echo "              last arg should be the file_name.tex"
    echo "  show/s    : display a pdf in a forked zathura instance"
    echo "  clean/c   : Perform clean operation."
    echo "  clean all : Clean everything including the pdf file"
    echo "  help/h    : Display this help message."
}

# Handle "show" functionality
handle_show() {
    if [ -z "$1" ]; then
        input_file=$(find_single_tex_with_pdf)
    else
        input_file="$1"
    fi

    if [[ "$input_file" == *.pdf && -f "$input_file" ]]; then
        pdf_name="$input_file"
    elif [[ "$input_file" == *.tex ]]; then
        base_name=$(basename "$input_file" .tex)
        build_pdf_path="build/${base_name}.pdf"

        if [ -f "$build_pdf_path" ]; then
            pdf_name="$build_pdf_path"
        else
            echo "Error: No PDF file found in the build directory for $input_file."
            exit 1
        fi
    else
        echo "Error: Input must be a valid .pdf or .tex file."
        exit 1
    fi
    show_pdf_in_zathura "$pdf_name"
}

# Main case statement
case "$1" in
    "clean" | "c" )
        shift
        perform_clean "$1"
        ;;
    "help" | "h")
        display_help
        shift
        ;;
    "show" | "s" )
        shift
        handle_show "$1"
        ;;
    "build" | "b" )
        shift
        build_case "$@"
        ;;
    *)
        build_case "$@"
        ;;
esac

